// Generated by CoffeeScript 1.10.0
(function(window, $) {
  var MULTIPART, doc, win;
  MULTIPART = 'multipart/form-data';
  win = $(window);
  doc = $(window.document.body);
  $.fn.loading = function() {
    var el;
    el = $(this);
    return el.each(function() {
      el = $(this);
      el.data('loading-orig-html', el.html());
      return el.html($.template('loading'));
    });
  };
  $.fn.cancelLoading = function() {
    var el;
    el = $(this);
    return el.each(function() {
      var origHtml;
      origHtml = el.data('loading-orig-html');
      if (!origHtml) {
        return;
      }
      el.html(origHtml);
      return el.removeData('loading-orig-html');
    });
  };
  $.createSubmitFrame = function(id) {
    var submitFrame;
    submitFrame = $('<iframe></iframe>');
    submitFrame.hide();
    submitFrame.attr('id', id);
    submitFrame.attr('name', id);
    doc.append(submitFrame);
    return submitFrame;
  };
  $.fn.makePartial = function() {
    var el;
    el = $(this);
    return el.append('<input type="hidden" name="partial" value="yes">');
  };
  $.fn.funnelSubmit = function() {
    var containerId, el, submitComplete, submitFrame, submitFrameHandler, submitHandler, submitTarget;
    el = $(this);
    containerId = el.attr('id');
    submitTarget = containerId + "-submit-frame";
    submitFrame = $.createSubmitFrame(submitTarget);
    submitComplete = function() {
      return win.trigger(containerId + "-submit", [el]);
    };
    submitFrameHandler = function(e) {
      var frameContent, status;
      frameContent = submitFrame.contents().find('body');
      el.html(frameContent.html());
      status = (frameContent.find('.feedback-message')).data('status');
      if (status === 'ok') {
        return submitComplete();
      }
    };
    submitHandler = function(e) {
      var action, form, formData, res;
      form = $(this);
      if ((form.attr('enctype')) === MULTIPART) {
        form.makePartial().attr('target', submitTarget);
        return submitFrame.one('load', submitFrameHandler);
      } else {
        e.preventDefault();
        formData = form.serialize();
        action = (form.attr('action')) || window.location.pathname;
        res = $.post(action, formData);
        res.done(function(resp) {
          el.html(resp);
          return submitComplete();
        });
        return res.fail(function(xhr) {
          return el.html(xhr.responseText);
        });
      }
    };
    return el.on('submit', 'form', submitHandler);
  };
  $.fn.reload = function(fn) {
    var el, id, url;
    el = $(this);
    if ((el.data('loading')) === true) {
      return;
    }
    el.data('loading', true);
    id = el.attr('id');
    url = el.data('roca-url');
    return el.load(url, function(res, status, xhr) {
      el.removeData('loading');
      switch (xhr.status) {
        case 200:
          if (typeof fn === "function") {
            fn(xhr.status);
          }
          win.trigger('roca-load', [el]);
          win.trigger(id + "-roca-load", [el]);
          break;
        default:
          if (typeof fn === "function") {
            fn(xhr.status);
          }
          el.cancelLoading();
          win.trigger('roca-error', [el]);
          win.trigger(id + "-roca-error");
      }
    });
  };
  $.fn.reloadOn = function(event) {
    var el;
    el = $(this);
    return win.on(event, function() {
      return el.reload();
    });
  };
  $.fn.rocaLoad = function() {
    return ($(this)).each(function() {
      var el, target, url;
      el = $(this);
      url = el.attr('href');
      target = $("#" + (el.data('roca-target')));
      if (!target.length) {
        return;
      }
      target.data('roca-url', url);
      target.rocaConfigureContainer();
      return target.loading().reload();
    });
  };
  return $.fn.rocaConfigureContainer = function() {
    return ($(this)).each(function() {
      var el, event;
      el = $(this);
      if ((el.data('roca-trap-submit')) === 'yes') {
        el.funnelSubmit();
      }
      if (event = el.data('roca-refresh-on')) {
        return el.reloadOn(event);
      }
    });
  };
})(this, this.jQuery);
