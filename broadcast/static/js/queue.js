// Generated by CoffeeScript 1.10.0
(function(window, $, templates) {
  'use strict';
  var getFormData, handles, loadData, queues, searchForm, searchQTElem, searchUrl;
  queues = $('.queue');
  handles = $('.handles a.handle');
  searchForm = $('.search form');
  searchUrl = searchForm.attr('action');
  searchQTElem = $('.search input#type');
  loadData = function(url, container) {
    var res;
    res = $.get(url);
    res.done(function(data) {
      return container.html(data);
    });
    res.fail(function() {
      return container.html(templates.queueLoadError);
    });
    return res;
  };
  handles.on('click', function(e) {
    var container, elem, target, url;
    e.preventDefault();
    elem = $(this);
    target = elem.data('target');
    container = queues.filter('.' + target);
    if (container.hasClass('hidden')) {
      url = elem.attr('href');
      queues.addClass('hidden');
      container.removeClass('hidden');
      return loadData(url, container);
    }
  });
  getFormData = function(form) {
    var arr, data;
    data = {};
    arr = form.serializeArray();
    $(arr).each(function(index, obj) {
      return data[obj.name] = obj.value;
    });
    return data;
  };
  return searchForm.on('submit', function(e) {
    var container, formData, res;
    e.preventDefault();
    container = queues.not('.hidden');
    formData = getFormData(searchForm);
    formData.type = container.data('source');
    res = $.ajax(searchUrl, {
      method: 'GET',
      data: formData
    });
    res.done(function(data) {
      return container.html(data);
    });
    return res.fail(function() {
      return container.html(templates.queueLoadError);
    });
  });
})(this, this.jQuery, this.templates);
