// Generated by CoffeeScript 1.10.0
(function(window, $, templates) {
  'use strict';
  var actionFormSelector, actionForms, decode, getFormData, getQueryParams, handles, loadQueue, modifyQueue, plusSign, queryRegEx, queues, searchForm, searchQTElem, searchUrl;
  queues = $('.items');
  handles = $('.handles a.handle');
  searchForm = $('form.search');
  searchUrl = searchForm.attr('action');
  searchQTElem = $('.search input#type');
  actionFormSelector = '.action form';
  plusSign = /\+/g;
  queryRegEx = /([^&=]+)=?([^&]*)/g;
  decode = function(src) {
    return decodeURIComponent(src.replace(plusSign, " "));
  };
  getQueryParams = function() {
    var match, params, query;
    params = {};
    query = window.location.search.substring(1);
    while ((match = queryRegEx.exec(query))) {
      params[decode(match[1])] = decode(match[2]);
    }
    return params;
  };
  getFormData = function(form) {
    var arr, data;
    data = {};
    arr = form.serializeArray();
    $(arr).each(function(index, obj) {
      return data[obj.name] = obj.value;
    });
    return data;
  };
  modifyQueue = function(e) {
    var actionUrl, btn, form, formData, res;
    e.preventDefault();
    form = $(this);
    btn = form.find('button');
    formData = getFormData(form);
    formData[btn.attr('name')] = btn.val();
    actionUrl = form.attr('action');
    res = $.ajax(actionUrl, {
      method: 'POST',
      data: formData
    });
    res.done(function(data) {
      var row;
      row = form.parents('tr');
      return row.remove();
    });
    return res.fail(function() {
      return alert(templates.queueModifyError);
    });
  };
  loadQueue = function(url, container) {
    var res;
    res = $.get(url);
    res.done(function(data) {
      var actionForms;
      container.html(data);
      actionForms = $(actionFormSelector);
      actionForms.off('submit', modifyQueue);
      return actionForms.on('submit', modifyQueue);
    });
    res.fail(function() {
      return container.html(templates.queueLoadError);
    });
    return res;
  };
  handles.on('click', function(e) {
    var container, elem, res, target, url;
    e.preventDefault();
    elem = $(this);
    target = elem.data('target');
    container = queues.filter('.' + target);
    if (container.hasClass('hidden')) {
      url = elem.attr('href');
      handles.removeClass('active');
      elem.addClass('active');
      queues.addClass('hidden');
      container.removeClass('hidden');
      res = loadQueue(url, container);
      return res.done(function(data) {
        return window.history.pushState(null, null, url);
      });
    }
  });
  searchForm.on('submit', function(e) {
    var container, formData, res;
    e.preventDefault();
    container = queues.not('.hidden');
    formData = getFormData(searchForm);
    formData.type = container.data('source');
    res = $.ajax(searchUrl, {
      method: 'GET',
      data: formData
    });
    res.done(function(data) {
      return container.html(data);
    });
    return res.fail(function() {
      return container.html(templates.queueLoadError);
    });
  });
  actionForms = $(actionFormSelector);
  actionForms.on('submit', modifyQueue);
  return $(window).on('popstate', function(e) {
    var activeHandle, container, params;
    params = getQueryParams();
    container = queues.filter('.' + params.type);
    activeHandle = $('.handle.' + params.type);
    handles.removeClass('active');
    activeHandle.addClass('active');
    queues.addClass('hidden');
    container.removeClass('hidden');
    return loadQueue(window.location, container);
  });
})(this, this.jQuery, this.templates);
